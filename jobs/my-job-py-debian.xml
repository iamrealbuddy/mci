<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2198.v41dd8ef6dd56"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2198.v41dd8ef6dd56">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3894.vd0f0248b_a_fc4">
    <script>node {
    sh &apos;&apos;&apos;
        echo before...;pwd;ls -l
    &apos;&apos;&apos;
    deleteDir()
    sleep(time: 5, unit: &apos;SECONDS&apos;)
    sh &apos;&apos;&apos;
        echo after...;pwd;ls -l
    &apos;&apos;&apos;
    dir(&apos;mci&apos;){
        checkout scmGit(
            branches: [[name: &apos;main&apos;]],
            userRemoteConfigs: [[url: &apos;https://github.com/iamrealbuddy/mci.git/&apos;]])
    }
    sleep(time: 5, unit: &apos;SECONDS&apos;)
    sh &apos;&apos;&apos;
        pwd;ls -l
    &apos;&apos;&apos;
}

pipeline {
    agent { 
        dockerfile {
            filename &apos;mci/docker/df-agent-debian-py&apos;
        } 
    }
    stages {
        stage(&apos;build&apos;) {
            steps {
                echo &quot;Building...debian-agent&quot;
                sh &apos;&apos;&apos;
                cat /etc/*-release
                &apos;&apos;&apos;
            }
        }
        stage(&apos;test&apos;) {
            steps {
                echo &quot;Testing...debian-agent&quot;
                sh &apos;&apos;&apos;
                pwd
                ls -l
                chmod +x mci/scripts/hi.sh
                ./mci/scripts/hi.sh
                python3 -V
                &apos;&apos;&apos;
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>